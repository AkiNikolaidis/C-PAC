# Select False if you intend to run CPAC on a single machine.
# If set to True, CPAC will attempt to submit jobs through the job scheduler /
# resource manager selected below.
runOnGrid :  False


# Full path to the FSL version to be used by CPAC.
# If you have specified an FSL path in your .bashrc file, this path will be set
# automatically.
FSLDIR :  /usr/share/fsl/5.0


# Sun Grid Engine (SGE) or Portable Batch System (PBS).
# Only applies if you are running on a grid or compute cluster.
resourceManager :  SGE


# SGE Parallel Environment to use when running CPAC.
# Only applies when you are running on a grid or compute cluster using SGE.
parallelEnvironment :  cpac


# SGE Queue to use when running CPAC.
# Only applies when you are running on a grid or compute cluster using SGE.
queue :  all.q


# The maximum amount of memory each participant's workflow can allocate. Use 
# this to place an upper bound of memory usage. Warning: 'Memory Per 
# Participant' multiplied by 'Number of Participants to Run Simultaneously' 
# must not be more than the total amount of RAM. Conversely, using too little 
# RAM can impede the speed of a pipeline run. It is recommended that you set 
# this to a value that when multiplied by 'Number of Participants to Run 
# Simultaneously' is as much RAM you can safely allocate.
maximumMemoryPerParticipant :  2


# The maximum amount of cores (on a single machine) or slots on a node (on a 
# cluster/grid) to allocate per participant. Setting this above 1 will 
# parallelize each participant's workflow where possible. If you wish to 
# dedicate multiple cores to ANTS-based anatomical registration (below), this 
# value must be equal or higher than the amount of cores provided to ANTS. 
# The maximum number of cores your run can possibly employ will be this 
# setting multiplied by the number of participants set to run in parallel 
# (the 'Number ofParticipants to Run Simultaneously' setting).
maxCoresPerParticipant :  1


# The number of participant workflows to run at the same time. The maximum 
# number of cores your run can possibly employ will be this setting 
# multiplied by the number of cores dedicated to each participant (the 
# 'Maximum Number of Cores Per Participant' setting).
numParticipantsAtOnce :  1


# The number of cores to allocate to ANTS-based anatomical registration per 
# participant. Multiple cores can greatly speed up this preprocessing step. 
# This number cannot be greater than the number of cores per participant.
num_ants_threads :  1


# Name for this pipeline configuration - useful for identification.
pipelineName :  your_pipeline_name_here


# Directory where CPAC should store temporary and intermediate files.
workingDirectory :  /path/to/working/directory


# Directory where CPAC should write crash logs.
crashLogDirectory :  /path/to/crash/directory


# Directory where CPAC should place processed data.
outputDirectory :  /path/to/output/directory

# Directory where CPAC should place pipeline logs
logDirectory : /path/to/log/directory

# Create a user-friendly, well organized version of the output directory.
# We recommend all users enable this option.
runSymbolicLinks :  [1]


# Generate quality control pages containing preprocessing and derivative outputs.
generateQualityControlImages :  [1]


# Deletes the contents of the Working Directory after running.
# This saves disk space, but any additional preprocessing or analysis will have
# to be completely re-run.
removeWorkingDir :  False


# Uses the contents of the Working Directory to regenerate all outputs and their
# symbolic links. Requires an intact Working Directory from a previous CPAC run.
reGenerateOutputs :  False


# Loads anatomical images for processing by CPAC.
# Must be enabled to run preprocessing and analyses.
runAnatomicalDataGathering :  [1]


# Loads functional images for processing by CPAC.
# Must be enabled to run preprocessing and analyses.
runFunctionalDataGathering :  [1]


# Runs the anatomical preprocessing workflow.
# Must be enabled to run any subsequent processing or analysis workflows.
runAnatomicalPreprocessing :  [1]


# Disables skull-stripping on the anatomical inputs if they are already
# skull-stripped outside of C-PAC. Set this to On if your input images are
# already skull-stripped.
already_skullstripped :  [0]


# Runs the functional preprocessing workflow.
# Must be enabled to run any subsequent processing or analysis workflows.
runFunctionalPreprocessing :  [1]


# Choose which tool to be used in functional masking - AFNI 3dAutoMask or FSL
# BET.
functionalMasking :  ['3dAutoMask']


# Decides format of outputs. Off will produce non-z-scored outputs, On will
# produce z-scores of outputs, and On/Off will produce both.
runZScoring :  [1]


# Register anatomical images to a template.
runRegistrationPreprocessing :  [1]


# The resolution to which anatomical images should be transformed during
# registration. This is the resolution at which processed anatomical files will
# be output.
resolution_for_anat :  2mm


# Template to be used during registration.
# It is not necessary to change this path unless you intend to use a
# non-standard template.
template_brain_only_for_anat :  /usr/share/fsl/5.0/data/standard/MNI152_T1_${resolution_for_anat}_brain.nii.gz


# Template to be used during registration.
# It is not necessary to change this path unless you intend to use a
# non-standard template.
template_skull_for_anat :  /usr/share/fsl/5.0/data/standard/MNI152_T1_${resolution_for_anat}.nii.gz


# Use either ANTS or FSL (FLIRT and FNIRT) as your anatomical registration
# method.
regOption :  ['ANTS']


# Configuration file to be used by FSL to set FNIRT parameters.
# It is not necessary to change this path unless you intend to use custom FNIRT
# parameters or a non-standard template.
fnirtConfig :  T1_2_MNI152_2mm


# Configuration file to be used by FSL to set FNIRT parameters.
# It is not necessary to change this path unless you intend to use custom FNIRT
# parameters or a non-standard template.
ref_mask :  /usr/share/fsl/5.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_dil.nii.gz


# Register skull-on anatomical image to a template.
regWithSkull :  [0]


# Automatically segment anatomical images into white matter, gray matter, and
# CSF based on prior probability maps.
runSegmentationPreprocessing :  [1]


# Full path to a directory containing binarized prior probability maps.
# These maps are included as part of the 'Image Resource Files' package
# available on the Install page of the User Guide. It is not necessary to
# change this path unless you intend to use non-standard priors.
priors_path :  /usr/share/fsl/5.0/data/standard/tissuepriors/${resolution_for_anat}


# Full path to a binarized White Matter prior probability map.
# It is not necessary to change this path unless you intend to use non-standard
# priors.
PRIORS_WHITE :  $priors_path/avg152T1_white_bin.nii.gz


# Full path to a binarized Gray Matter prior probability map.
# It is not necessary to change this path unless you intend to use non-standard
# priors.
PRIORS_GRAY :  $priors_path/avg152T1_gray_bin.nii.gz


# Full path to a binarized CSF prior probability map.
# It is not necessary to change this path unless you intend to use non-standard
# priors.
PRIORS_CSF :  $priors_path/avg152T1_csf_bin.nii.gz


# First timepoint to include in analysis.
# Default is 0 (beginning of timeseries).
startIdx :  0


# Last timepoint to include in analysis.
# Default is None or End (end of timeseries).
stopIdx :  None


# Interpolate voxel time courses so they are sampled at the same time points.
slice_timing_correction :  [0]


# Run Functional to Anatomical Registration
runRegisterFuncToAnat :  [1]


# Run Functional to Anatomical Registration with BB Register
runBBReg :  [1]


# Standard FSL 5.0 Scheduler used for Boundary Based Registration.
# It is not necessary to change this path unless you intend to use non-standard
# MNI registration.
boundaryBasedRegistrationSchedule :  /usr/share/fsl/5.0/etc/flirtsch/bbr.sch


# Choose whether to use the mean of the functional/EPI as the input to
# functional-to-anatomical registration or one of the volumes from the
# functional 4D timeseries that you choose.
func_reg_input :  ['Mean Functional']


# Only for when 'Use as Functional-to-Anatomical Registration Input' is set to
# 'Selected Functional Volume'. Input the index of which volume from the
# functional 4D timeseries input file you wish to use as the input for
# functional-to-anatomical registration.
func_reg_input_volume :  0


# Register functional images to a standard MNI152 template.
# This option must be enabled if you wish to calculate any derivatives.
runRegisterFuncToMNI :  [1]

# The resolution (in mm) to writeout the 4D preprocessed fMRI data when
# transforming them to template space.
# Note: using high resolution (<< original resolution) will arbitrarily
# inflate the image size without providing any new information. This
# can use alot of RAM and may cause the system to crash
resolution_for_func_preproc : 3mm

# The resolution (in mm) to which derivatives calculated from the functional
# images are written in template space.
resolution_for_func_derivatives :  2mm

# Standard FSL Skull Stripped Template. Used as a reference image for functional
# registration
template_brain_only_for_func :  /usr/share/fsl/5.0/data/standard/MNI152_T1_${resolution_for_func_preproc}_brain.nii.gz


# Standard FSL Anatomical Brain Image with Skull
template_skull_for_func :  /usr/share/fsl/5.0/data/standard/MNI152_T1_${resolution_for_func_preproc}.nii.gz


# Matrix containing all 1's. Used as an identity matrix during registration.
# It is not necessary to change this path unless you intend to use non-standard
# MNI registration.
identityMatrix :  /usr/share/fsl/5.0/etc/flirtsch/ident.mat


# Run Nuisance Signal Correction
runNuisance :  [1]


# Standard Lateral Ventricles Binary Mask
lateral_ventricles_mask :  /usr/share/fsl/5.0/data/atlases/HarvardOxford/HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz


# Select which nuisance signal corrections to apply:
# compcor = CompCor
# wm = White Matter
# csf = CSF
# gm = Gray Matter
# global = Global Mean Signal
# pc1 = First Principle Component
# motion = Motion
# linear = Linear Trend
# quadratic = Quadratic Trend
Corrections :
  -  compcor :  0
     wm :  0
     csf :  0
     global :  0
     pc1 :  0
     motion :  0
     linear :  0
     quadratic :  0
     gm :  0


# Number of Principle Components to calculate when running CompCor. We recommend
# 5 or 6.
nComponents : [5]


# Correct for the global signal using Median Angle Correction.
runMedianAngleCorrection :  [0]


# Target angle used during Median Angle Correction.
targetAngleDeg : [90]


# Apply a temporal band-pass filter to functional data.
runFrequencyFiltering :  [1]


# Define one or more band-pass filters by clicking the + button.
nuisanceBandpassFreq : [[0.009, 0.1]]


# Use the Friston 24-Parameter Model during volume realignment.
# If this option is turned off, only 6 parameters will be used.
# These parameters will also be output as a spreadsheet.
runFristonModel :  [1]


# Calculate motion statistics including Framewise Displacement (FD) and DVARS.
# Required to run Scrubbing.
# These parameters will also be output as a spreadsheet.
runGenerateMotionStatistics :  [1]


# Remove volumes exhibiting excessive motion.
runScrubbing :  [0]


# Specify the maximum acceptable Framewise Displacement (FD) in millimeters.
# Any volume exhibiting FD greater than this value will be removed.
scrubbingThreshold : [0.2]


# Number of volumes to remove preceeding a volume with excessive FD.
numRemovePrecedingFrames :  1


# Number of volumes to remove subsequent to a volume with excessive FD.
numRemoveSubsequentFrames :  2


# Enter paths to region-of-interest (ROI) NIFTI files (.nii or .nii.gz) to be used for time-series extraction, and then select which types of analyses to run.
# Available analyses: ['Avg', 'Voxel', 'SpatialReg'].
# Denote which analyses to run for each ROI path by listing the names above. For example, if you wish to run Avg and SpatialReg, you would enter: '/path/to/ROI.nii.gz': Avg, SpatialReg
tsa_roi_paths:
  - 


# By default, extracted time series are written as both a text file and a 1D file. Additional output formats are as a .csv spreadsheet or a Numpy array.
roiTSOutputs :  [False, False]


# For each extracted ROI Average time series, CPAC will generate a whole-brain correlation map.
# It should be noted that for a given seed/ROI, SCA maps for ROI Average time series will be the same.
runSCA :  [1]


# Enter paths to region-of-interest (ROI) NIFTI files (.nii or .nii.gz) to be used for time-series extraction, and then select which types of analyses to run.
# Available analyses: ['Avg', 'DualReg', 'MultReg'].
# Denote which analyses to run for each ROI path by listing the names above. For example, if you wish to run Avg and MultReg, you would enter: '/path/to/ROI.nii.gz': Avg, MultReg
sca_roi_paths:
  - 


# Calculate Voxel-mirrored Homotopic Connectivity (VMHC) for all voxels.
runVMHC :  [1]


# Included as part of the 'Image Resource Files' package available on the
# Install page of the User Guide. It is not necessary to change this path
# unless you intend to use a non-standard symmetric template.
template_symmetric_brain_only :  $FSLDIR/data/standard/MNI152_T1_${resolution_for_anat}_brain_symmetric.nii.gz


# Included as part of the 'Image Resource Files' package available on the
# Install page of the User Guide. It is not necessary to change this path
# unless you intend to use a non-standard symmetric template.
template_symmetric_skull :  $FSLDIR/data/standard/MNI152_T1_${resolution_for_anat}_symmetric.nii.gz


# Included as part of the 'Image Resource Files' package available on the
# Install page of the User Guide. It is not necessary to change this path
# unless you intend to use a non-standard symmetric template.
dilated_symmetric_brain_mask :  $FSLDIR/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_symmetric_dil.nii.gz


# Included as part of the 'Image Resource Files' package available on the
# Install page of the User Guide. It is not necessary to change this path
# unless you intend to use a non-standard symmetric template.
configFileTwomm :  $FSLDIR/etc/flirtsch/T1_2_MNI152_2mm.cnf


# Calculate Amplitude of Low Frequency Fluctuations (ALFF) and and fractional
# ALFF (f/ALFF) for all voxels.
runALFF :  [1]


# Frequency cutoff (in Hz) for the high-pass filter used when calculating
# f/ALFF.
highPassFreqALFF : [0.01]


# Frequency cutoff (in Hz) for the low-pass filter used when calculating f/ALFF
lowPassFreqALFF : [0.1]


# Calculate Regional Homogeneity (ReHo) for all voxels.
runReHo :  [1]


# Number of neighboring voxels used when calculating ReHo
# 7 (Faces)
# 19 (Faces + Edges)
# 27 (Faces + Edges + Corners)
clusterSize :  27


# Calculate Degree, Eigenvector Centrality, or Functional Connectivity Density.
runNetworkCentrality :  [0]


# Full path to a text file containing a mask or list of ROIs.
# Each line of this file should contain the path to an ROI or mask.
# If a mask is specified, centrality will be calculated for all voxels within
# the mask. If a list of ROIs is specified, each ROI will be treated as a node,
# and centrality will be calculated for each node.
templateSpecificationFile :  /path/to/centrality/specs


# Enable/Disable degree centrality by selecting the connectivity weights
degWeightOptions :  [True, True]


# Select the type of threshold used when creating the degree centrality
# adjacency matrix.
degCorrelationThresholdOption :  0


# Based on the Threshold Type selected above, enter a Threshold Value.
# P-value for Significance Threshold
# Sparsity value for Sparsity Threshold
# Pearson's r value for Correlation Threshold
degCorrelationThreshold :  0.001


# Enable/Disable eigenvector centrality by selecting the connectivity weights
eigWeightOptions :  [False, False]


# Select the type of threshold used when creating the eigenvector centrality
# adjacency matrix.
eigCorrelationThresholdOption :  0


# Based on the Threshold Type selected above, enter a Threshold Value.
# P-value for Significance Threshold
# Sparsity value for Sparsity Threshold
# Pearson's r value for Correlation Threshold
eigCorrelationThreshold :  0.001


# Enable/Disable lFCD by selecting the connectivity weights
lfcdWeightOptions :  [True, True]


# Select the type of threshold used when creating the lFCD adjacency matrix.
lfcdCorrelationThresholdOption :  0


# Based on the Threshold Type selected above, enter a Threshold Value.
# P-value for Significance Threshold
# Sparsity value for Sparsity Threshold
# Pearson's r value for Correlation Threshold
lfcdCorrelationThreshold :  0.001


# Maximum amount of RAM (in GB) to be used when calculating Degree Centrality.
# Calculating Eigenvector Centrality will require additional memory based on
# the size of the mask or number of ROI nodes.
memoryAllocatedForDegreeCentrality :  2.0


# Full Width at Half Maximum of the Gaussian kernel used during spatial
# smoothing. Can be a single value or multiple values separated by commas.
# Note that spatial smoothing is run as the last step in the individual-level
# analysis pipeline, such that all derivatives are output both smoothed
# and unsmoothed.
fwhm : [6]


# Run Bootstrap Analysis of Stable Clusters
runBASC :  [0]


# Full path to a mask file to be used when running BASC. Voxels outside this
# mask will be excluded from analysis. If you do not wish to use a mask, set
# this field to None.
# Note: BASC is very computationally intensive, we strongly recommend you limit
# your analysis to specific brain areas of interest.
bascROIFile :  None


# Number of bootstraps to apply to individual time series.
bascTimeseriesBootstraps :  100


# Number of bootstraps to apply to the original dataset.
bascDatasetBootstraps :  100


# Path to a text file containing correlation threshold for each subject. These
# thresholds will be applied to the correlation matrix before clustering. This
# file should contain one value per line, with each line corresponding to the
# subject on the same line in the group analysis subject list file. In most
# cases, the same threshold can be used for all subjects. Different thresholds
# are useful when subjects have time series of different lengths.
bascAffinityThresholdFile :


# Number of clusters to create during clustering at both the individual and
# group levels.
bascClusters :  6


# Run CWAS
runCWAS :  [0]


# Path to a mask file. Voxels outside this mask will be excluded from CWAS.
cwasROIFile :  None


# Path to a text file containing phenotypic regressor.
cwasRegressorFile :  None


# Number of permutation tests to run on the Psuedo-F statistic.
cwasFSamples :  5000


# Number of NiPype nodes to be created while computing CWAS.
# This number depends on computing resources.
cwasParallelNodes :  10


# Column Number with Regressor of Interest.
# Remember this is 0 indexed so the 1st column is 0.
# For instance, assuming the 1st column is the intercept, column number with
# regressor of interest = 1
cwasRegressorCols : 0


# A list with length equal to the total number of rows in your regressor file.
# Each element of the list, indicates that elements group. Leave it as None.
# if you have a between-subject design and give it a value if not.
# For instance, if you have multiple scans per subject, then you would want to
# do a permutation within-subject between scans. For this to occur, the list
# below could be something like ['s1', 's1', 's2', 's2', 's3', 's3', ...],
# indicating what subject each element/scan is associated with and permutations
# would only be done between scans within each subject.
cwasRegressorStrata :  None


# This number depends on computing resources.
numGPAModelsAtOnce :  2


# Use the + to add FSL model configuration to be run.
modelConfigs :  []
